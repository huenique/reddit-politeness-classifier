"""
This type stub file was generated by pyright.
"""

from typing import TYPE_CHECKING, Any

import praw

from ...util import _deprecate_args
from .base import RedditBase

"""Provide the Emoji class."""
if TYPE_CHECKING:
    ...
class Emoji(RedditBase):
    """An individual :class:`.Emoji` object.

    .. include:: ../../typical_attributes.rst

    ====================== =================================================
    Attribute              Description
    ====================== =================================================
    ``mod_flair_only``     Whether the emoji is restricted for mod use only.
    ``name``               The name of the emoji.
    ``post_flair_allowed`` Whether the emoji may appear in post flair.
    ``url``                The URL of the emoji image.
    ``user_flair_allowed`` Whether the emoji may appear in user flair.
    ====================== =================================================

    """
    STR_FIELD = ...
    def __eq__(self, other: str | Emoji) -> bool:
        """Return whether the other instance equals the current."""
        ...
    
    def __hash__(self) -> int:
        """Return the hash of the current instance."""
        ...
    
    def __init__(self, reddit: praw.Reddit, subreddit: praw.models.Subreddit, name: str, _data: dict[str, Any] | None = ...) -> None:
        """Initialize an :class:`.Emoji` instance."""
        ...
    
    def delete(self): # -> None:
        """Delete an emoji from this subreddit by :class:`.Emoji`.

        To delete ``"emoji"`` as an emoji on r/test try:

        .. code-block:: python

            reddit.subreddit("test").emoji["emoji"].delete()

        """
        ...
    
    @_deprecate_args("mod_flair_only", "post_flair_allowed", "user_flair_allowed")
    def update(self, *, mod_flair_only: bool | None = ..., post_flair_allowed: bool | None = ..., user_flair_allowed: bool | None = ...): # -> None:
        """Update the permissions of an emoji in this subreddit.

        :param mod_flair_only: Indicate whether the emoji is restricted to mod use only.
            Respects pre-existing settings if not provided.
        :param post_flair_allowed: Indicate whether the emoji may appear in post flair.
            Respects pre-existing settings if not provided.
        :param user_flair_allowed: Indicate whether the emoji may appear in user flair.
            Respects pre-existing settings if not provided.

        .. note::

            In order to retain pre-existing values for those that are not explicitly
            passed, a network request is issued. To avoid that network request,
            explicitly provide all values.

        To restrict the emoji ``"emoji"`` in r/test to mod use only, try:

        .. code-block:: python

            reddit.subreddit("test").emoji["emoji"].update(mod_flair_only=True)

        """
        ...
    


class SubredditEmoji:
    """Provides a set of functions to a :class:`.Subreddit` for emoji."""
    def __getitem__(self, name: str) -> Emoji:
        """Lazily return the :class:`.Emoji` for the subreddit named ``name``.

        :param name: The name of the emoji.

        This method is to be used to fetch a specific emoji url, like so:

        .. code-block:: python

            emoji = reddit.subreddit("test").emoji["emoji"]
            print(emoji)

        """
        ...
    
    def __init__(self, subreddit: praw.models.Subreddit) -> None:
        """Initialize a :class:`.SubredditEmoji` instance.

        :param subreddit: The subreddit whose emoji are affected.

        """
        ...
    
    def __iter__(self) -> list[Emoji]:
        """Return a list of :class:`.Emoji` for the subreddit.

        This method is to be used to discover all emoji for a subreddit:

        .. code-block:: python

            for emoji in reddit.subreddit("test").emoji:
                print(emoji)

        """
        ...
    
    def add(self, *, image_path: str, mod_flair_only: bool | None = ..., name: str, post_flair_allowed: bool | None = ..., user_flair_allowed: bool | None = ...) -> Emoji:
        """Add an emoji to this subreddit.

        :param image_path: A path to a jpeg or png image.
        :param mod_flair_only: When provided, indicate whether the emoji is restricted
            to mod use only (default: ``None``).
        :param name: The name of the emoji.
        :param post_flair_allowed: When provided, indicate whether the emoji may appear
            in post flair (default: ``None``).
        :param user_flair_allowed: When provided, indicate whether the emoji may appear
            in user flair (default: ``None``).

        :returns: The :class:`.Emoji` added.

        To add ``"emoji"`` to r/test try:

        .. code-block:: python

            reddit.subreddit("test").emoji.add(name="emoji", image_path="emoji.png")

        """
        ...
    


