"""
This type stub file was generated by pyright.
"""

"""Provide the InboxableMixin class."""
class InboxableMixin:
    """Interface for :class:`.RedditBase` subclasses that originate from the inbox."""
    def block(self): # -> None:
        """Block the user who sent the item.

        .. note::

            This method pertains only to objects which were retrieved via the inbox.

        Example usage:

        .. code-block:: python

            comment = reddit.comment("dkk4qjd")
            comment.block()

            # or, identically:

            comment.author.block()

        """
        ...
    
    def collapse(self): # -> None:
        """Mark the item as collapsed.

        .. note::

            This method pertains only to objects which were retrieved via the inbox.

        Example usage:

        .. code-block:: python

            inbox = reddit.inbox()

            # select first inbox item and collapse it message = next(inbox)
            message.collapse()

        .. seealso::

            :meth:`.uncollapse`

        """
        ...
    
    def mark_read(self): # -> None:
        """Mark a single inbox item as read.

        .. note::

            This method pertains only to objects which were retrieved via the inbox.

        Example usage:

        .. code-block:: python

            inbox = reddit.inbox.unread()

            for message in inbox:
                # process unread messages
                ...

        .. seealso::

            :meth:`.mark_unread`

        To mark the whole inbox as read with a single network request, use
        :meth:`.Inbox.mark_all_read`

        """
        ...
    
    def mark_unread(self): # -> None:
        """Mark the item as unread.

        .. note::

            This method pertains only to objects which were retrieved via the inbox.

        Example usage:

        .. code-block:: python

            inbox = reddit.inbox(limit=10)

            for message in inbox:
                # process messages
                ...

        .. seealso::

            :meth:`.mark_read`

        """
        ...
    
    def unblock_subreddit(self): # -> None:
        """Unblock a subreddit.

        .. note::

            This method pertains only to objects which were retrieved via the inbox.

        For example, to unblock all blocked subreddits that you can find by going
        through your inbox:

        .. code-block:: python

            from praw.models import SubredditMessage

            subs = set()
            for item in reddit.inbox.messages(limit=None):
                if isinstance(item, SubredditMessage):
                    if (
                        item.subject == "[message from blocked subreddit]"
                        and str(item.subreddit) not in subs
                    ):
                        item.unblock_subreddit()
                        subs.add(str(item.subreddit))

        """
        ...
    
    def uncollapse(self): # -> None:
        """Mark the item as uncollapsed.

        .. note::

            This method pertains only to objects which were retrieved via the inbox.

        Example usage:

        .. code-block:: python

            inbox = reddit.inbox()

            # select first inbox item and uncollapse it
            message = next(inbox)
            message.uncollapse()

        .. seealso::

            :meth:`.collapse`

        """
        ...
    


