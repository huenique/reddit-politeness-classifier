"""
This type stub file was generated by pyright.
"""

from typing import TYPE_CHECKING, Any

import praw

from ..base import PRAWBase

"""Provide the RedditBase class."""
if TYPE_CHECKING:
    ...
class RedditBase(PRAWBase):
    """Base class that represents actual Reddit objects."""
    def __eq__(self, other: Any | str) -> bool:
        """Return whether the other instance equals the current."""
        ...
    
    def __getattr__(self, attribute: str) -> Any:
        """Return the value of ``attribute``."""
        ...
    
    def __hash__(self) -> int:
        """Return the hash of the current instance."""
        ...
    
    def __init__(self, reddit: praw.Reddit, _data: dict[str, Any] | None, _extra_attribute_to_check: str | None = ..., _fetched: bool = ..., _str_field: bool = ...) -> None:
        """Initialize a :class:`.RedditBase` instance.

        :param reddit: An instance of :class:`.Reddit`.

        """
        ...
    
    def __ne__(self, other: object) -> bool:
        """Return whether the other instance differs from the current."""
        ...
    
    def __repr__(self) -> str:
        """Return an object initialization representation of the instance."""
        ...
    
    def __str__(self) -> str:
        """Return a string representation of the instance."""
        ...
    


